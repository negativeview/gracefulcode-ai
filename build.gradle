apply plugin: 'java'
//apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'

group 'com.gracefulcode'
version '0.1.5'
sourceCompatibility = 1.7

dependencies {
    testImplementation 'junit:junit:[4.11,)'
}

repositories {
    jcenter()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task signJavadoc(type: Sign) {
    sign javadocJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: 'username', password: 'password')
            }

            pom.project {
                name 'Graceful AI'
                packaging 'jar'
                description 'AI libraries dealing primarily with Goal Oriented Action Planning'
                url 'http://www.gracefulcode.com/libs/ai'

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection 'scm:git:git://github.com/negativeview/graceful-ai.git'
                    developerConnection 'scm:git:ssh://github.com:negativeivew/graceful-ai.git'
                    url 'http://github.com/negativeview/graceful-ai'
                }

                developers {
                    developer {
                        id 'dgrace'
                        name 'Daniel Grace'
                        email 'dgrace@gracefulcode.com'
                    }
                }
            }
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

artifacts {
    archives javadocJar, sourcesJar
}
